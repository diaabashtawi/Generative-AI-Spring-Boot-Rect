{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diaab\\\\WebstormProjects\\\\spring-ai\\\\src\\\\components\\\\ImageGenerator.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Col, Form, Image, Row } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImageGenerator() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [imageUrls, setImageUrls] = useState([]);\n  const generateImage = async () => {\n    try {\n      console.log(\"Generating image...\");\n      const response = await fetch(`http://localhost:8080//generate-image?prompt=${prompt}`);\n      const urls = await response.json();\n      console.log(\"URL : \", urls);\n      setImageUrls(urls);\n      console.log(imageUrls);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image Generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter prompt for image\",\n              value: prompt,\n              onChange: e => setPrompt(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-1\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              type: \"submit\",\n              className: \"m-1\",\n              onClick: generateImage,\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ImageGenerator, \"GsEgbnnJTaVnZrFii5ffKE1yVR8=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["useState","Button","Col","Form","Image","Row","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageGenerator","_s","prompt","setPrompt","imageUrls","setImageUrls","generateImage","console","log","response","fetch","urls","json","e","children","className","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","target","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/diaab/WebstormProjects/spring-ai/src/components/ImageGenerator.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport {Button, Col, Form, Image, Row} from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n\r\nfunction ImageGenerator() {\r\n    const [prompt, setPrompt] = useState('');\r\n    const [imageUrls, setImageUrls] = useState([]);\r\n\r\n    const generateImage = async () => {\r\n        try {\r\n            console.log(\"Generating image...\");\r\n            const response = await fetch(`http://localhost:8080//generate-image?prompt=${prompt}`)\r\n            const urls = await response.json();\r\n            console.log(\"URL : \", urls);\r\n            setImageUrls(urls);\r\n            console.log(imageUrls)\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                            <Form.Label>Image Generator</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter prompt for image\"\r\n                                value={prompt}\r\n                                onChange={(e) => setPrompt(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <div className=\"d-grid gap-1\">\r\n                            <Button\r\n                                variant=\"outline-primary\"\r\n                                type=\"submit\"\r\n                                className=\"m-1\"\r\n                                onClick={generateImage}>\r\n                                Generate\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        Output\r\n                        {/*{*/}\r\n                        {/*    imageUrls.map((url, index) => (*/}\r\n                        {/*        <Image key={index} src={url} alt={`Generated ${index}`} fluid />*/}\r\n                        {/*    ))*/}\r\n                        {/*}*/}\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ImageGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}