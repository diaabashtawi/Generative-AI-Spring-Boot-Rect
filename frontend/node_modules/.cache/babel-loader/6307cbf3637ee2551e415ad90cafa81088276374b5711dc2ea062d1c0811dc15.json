{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diaab\\\\WebstormProjects\\\\spring-ai\\\\src\\\\components\\\\ImageGenerator.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Col, Form, Image, Row } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImageGenerator() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [imageUrls, setImageUrls] = useState([]);\n  const generateImage = async () => {\n    try {\n      console.log(\"Generating image...\");\n      const response = await fetch(`http://localhost:8080//generate-image?${prompt}`);\n      const urls = await response.json();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formGroupEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Image Generator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter prompt for image\",\n                value: prompt,\n                onChange: e => setPrompt(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-1\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                type: \"submit\",\n                className: \"m-1\",\n                onClick: generateImage,\n                children: \"Generate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Output\", imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(Image, {\n            src: url,\n            alt: `Generated ${index}`,\n            fluid: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ImageGenerator, \"GsEgbnnJTaVnZrFii5ffKE1yVR8=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["useState","Button","Col","Form","Image","Row","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageGenerator","_s","prompt","setPrompt","imageUrls","setImageUrls","generateImage","console","log","response","fetch","urls","json","e","children","className","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","target","variant","onClick","map","url","index","src","alt","fluid","_c","$RefreshReg$"],"sources":["C:/Users/diaab/WebstormProjects/spring-ai/src/components/ImageGenerator.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport {Button, Col, Form, Image, Row} from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n\r\nfunction ImageGenerator() {\r\n    const [prompt, setPrompt] = useState('');\r\n    const [imageUrls, setImageUrls] = useState([]);\r\n\r\n    const generateImage = async () => {\r\n        try {\r\n            console.log(\"Generating image...\");\r\n            const response = await fetch(`http://localhost:8080//generate-image?${prompt}`)\r\n            const urls = await response.json();\r\n        }catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                                <Form.Label>Image Generator</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter prompt for image\"\r\n                                    value={prompt}\r\n                                    onChange={(e) => setPrompt(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"d-grid gap-1\">\r\n                                <Button\r\n                                    variant=\"outline-primary\"\r\n                                    type=\"submit\"\r\n                                    className=\"m-1\"\r\n                                    onClick={generateImage}>\r\n                                    Generate\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col>\r\n                        Output\r\n                        {\r\n                            imageUrls.map((url, index) => (\r\n                                <Image key={index} src={url} alt={`Generated ${index}`} fluid />\r\n                            ))\r\n                        }\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ImageGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}